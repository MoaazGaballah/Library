/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Library;

import com.github.javafaker.Faker;
import java.awt.Color;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import java.io.PrintWriter;
import java.net.MalformedURLException;
import java.net.URL;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author moaaznotadmin
 */
public class Management extends javax.swing.JFrame {

    /**
     * Creates new form Management
     */
    static ArrayList<Book> books = new ArrayList();
    DefaultTableModel tavleModel;
//    static boolean firstTime = true;
    Faker faker = new Faker();

    public Management() {
        initComponents();

        tavleModel = new DefaultTableModel();
        jTable1.setModel(tavleModel);

        tavleModel.addColumn("Book Name");
        tavleModel.addColumn("Author");
        tavleModel.addColumn("Publish Date");
        tavleModel.addColumn("Seri No.");
//        if (firstTime) {
//            fillSamples();
//        }

        for (Book book : books) {
            tavleModel.addRow(new Object[]{book.name, book.author, book.PublishDate, book.seriNo});
        }

        this.getContentPane().setBackground(new Color(51, 255, 255, 255));
        this.setLocationRelativeTo(null);
//        firstTime = false;

        jTextFieldSearch.getDocument().addDocumentListener(new DocumentListener() {
            public void search() {
                tavleModel.getDataVector().removeAllElements();
                String searchText;
                searchText = jTextFieldSearch.getText();

                if (getBooksByName(searchText.toLowerCase()).size() > 0) {
                    addBooksToTable(getBooksByName(searchText.toLowerCase()));
                    return;
                }
                if (getBooksByAuthor(searchText.toLowerCase()).size() > 0) {
                    addBooksToTable(getBooksByAuthor(searchText.toLowerCase()));
                    return;
                }
                if (getBooksByPubDate(searchText.toLowerCase()).size() > 0) {
                    addBooksToTable(getBooksByPubDate(searchText.toLowerCase()));
                    return;
                }
                if (getBooksBySeriNo(searchText.toLowerCase()).size() > 0) {
                    addBooksToTable(getBooksBySeriNo(searchText.toLowerCase()));
                }
            }

            @Override
            public void insertUpdate(DocumentEvent de) {
                search();
            }

            @Override
            public void removeUpdate(DocumentEvent de) {
                search();
            }

            @Override
            public void changedUpdate(DocumentEvent de) {
                search();
            }
        });

        addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {
                System.out.println("Closed");
                final ImageIcon icon;
                try {
                    icon = new ImageIcon(new URL("http://www.archisevilla.org/wp-content/themes/archisevilla/images/loading.gif"));
                    JOptionPane.showMessageDialog(null, "Backing up your database\n\n"
                            + "Press 'OK' to close", "About", JOptionPane.INFORMATION_MESSAGE, icon);
                    exportToTXTFile();
                    e.getWindow().dispose();
                } catch (MalformedURLException ex) {
                    Logger.getLogger(Management.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonAdd = new javax.swing.JButton();
        jButtonUpdate = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jTextFieldSearch = new javax.swing.JTextField();
        jButtonSearch = new javax.swing.JButton();
        jButtonExport = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButtonSignout = new javax.swing.JButton();
        jButtonGenerate = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButtonAdd.setText("Add");
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });

        jButtonUpdate.setText("Update");
        jButtonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateActionPerformed(evt);
            }
        });

        jButtonDelete.setBackground(new java.awt.Color(255, 0, 0));
        jButtonDelete.setText("Delete");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        jButtonSearch.setText("Search");
        jButtonSearch.setEnabled(false);
        jButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchActionPerformed(evt);
            }
        });

        jButtonExport.setText("Export");
        jButtonExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExportActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(jTable1);

        jButtonSignout.setText("Sign out");
        jButtonSignout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSignoutActionPerformed(evt);
            }
        });

        jButtonGenerate.setText("Generate Samples");
        jButtonGenerate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGenerateActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 36)); // NOI18N
        jLabel2.setText("Management Panel");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(136, 136, 136)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButtonAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 242, Short.MAX_VALUE)
                        .addComponent(jButtonUpdate)
                        .addGap(187, 187, 187)
                        .addComponent(jButtonDelete))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButtonSearch)
                                .addGap(12, 12, 12))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextFieldSearch)
                                .addGap(104, 104, 104)))
                        .addComponent(jButtonGenerate))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButtonSignout)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonExport)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAdd)
                    .addComponent(jButtonUpdate)
                    .addComponent(jButtonDelete))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSearch)
                    .addComponent(jButtonGenerate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonExport)
                    .addComponent(jButtonSignout))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fillSamples() {
        books.add(new Book("Fish Without Hope", "BRIAN ROBINETT", "21/01/1989", 56644439));
        books.add(new Book("Defender Of Glory", "JESSICA KINSMAN", "20/01/1999", 45274928));
        books.add(new Book("Heroes With Determination", "TYLER STONE", "24/05/1999", 73326866));
        books.add(new Book("Serpents Of The Eternal", "MINERVA MCKINNEY", "16/11/1992", 84399847));
        books.add(new Book("Snakes And Witches", "ELISE GREER", "04/11/2018", 99256248));
        books.add(new Book("Swindlers And Giants", "ORSON MENDEZ", "21/02/2010", 97867643));
        books.add(new Book("Crossbow Of Dawn", "FRANK STEVENS", "02/05/2000", 58878443));
        books.add(new Book("Root Of Earth", "JOE DEAN", "08/07/2003", 42826586));
        books.add(new Book("Flying Into The Angels", "STEPHEN BINDER", "24/08/2009", 67238653));
        books.add(new Book("Answering The Apocalypse", "NEAL FARMER", "30/12/2017", 82693353));

    }
    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        // TODO add your handling code here:
        new AddBook().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButtonAddActionPerformed

    private void jButtonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateActionPerformed
        // TODO add your handling code here:
        if (jTable1.getSelectionModel().isSelectionEmpty()) {
            JOptionPane.showMessageDialog(this, "Please select a row first!");
            return;
        }
        String name = jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 0).toString();
        String author = jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 1).toString();
        String pubDate = jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 2).toString();
        int seriNo = Integer.parseInt(jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 3).toString());

        updateBook upBook = new updateBook();
        upBook.jTextFieldName.setText(name);
        upBook.jTextFieldAuthor.setText(author);
        upBook.jTextFieldPubDate.setText(pubDate);
        upBook.jLabelSeriNo.setText(String.valueOf(seriNo));

        upBook.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButtonUpdateActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        // TODO add your handling code here:
        if (jTable1.getSelectionModel().isSelectionEmpty()) {
            JOptionPane.showMessageDialog(this, "Please select a row first!");
            return;
        }
        int dialogResult = JOptionPane.showConfirmDialog(null, "Are you sure, you want to delete this book?", "Warning", 1);
        if (dialogResult == JOptionPane.YES_OPTION) {
            int seriNo = Integer.parseInt(jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 3).toString());
            for (int i = 0; i < Management.books.size(); i++) {
                if (Management.books.get(i).seriNo == seriNo) {
                    tavleModel.removeRow(jTable1.getSelectedRow());
                    Management.books.remove(i);
                }
            }
            JOptionPane.showMessageDialog(this, "Book had been deleted successfully!");
        }
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private ArrayList<Book> getBooksByName(String name) {
        ArrayList<Book> books = new ArrayList();
        for (Book book : Management.books) {
            if (book.name.toLowerCase().contains(name.toLowerCase())) {
                books.add(book);
            }
        }
        return books;
    }

    private ArrayList<Book> getBooksByAuthor(String author) {
        ArrayList<Book> books = new ArrayList();
        for (Book book : Management.books) {
            if (book.author.toLowerCase().contains(author.toLowerCase())) {
                books.add(book);
            }
        }
        return books;
    }

    private ArrayList<Book> getBooksByPubDate(String date) {
        ArrayList<Book> books = new ArrayList();
        for (Book book : Management.books) {
            if (book.PublishDate.toLowerCase().contains(date.toLowerCase())) {
                books.add(book);
            }
        }
        return books;
    }

    private ArrayList<Book> getBooksBySeriNo(String seriNo) {
        ArrayList<Book> books = new ArrayList();
        for (Book book : Management.books) {
            if (String.valueOf(book.seriNo).contains(seriNo.toLowerCase())) {
                books.add(book);
            }
        }
        return books;
    }

    private void addBooksToTable(ArrayList<Book> bookList) {
        tavleModel.getDataVector().removeAllElements();
        for (Book book : bookList) {
            tavleModel.addRow(new Object[]{book.name, book.author, book.PublishDate, book.seriNo});
        }
    }
    private void jButtonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchActionPerformed
        // TODO add your handling code here:
        tavleModel.getDataVector().removeAllElements();
        String searchText;
        if (!jTextFieldSearch.getText().isEmpty()) {
            searchText = jTextFieldSearch.getText();
        } else {
            JOptionPane.showMessageDialog(this, "Please enter a search text!");
            return;
        }
        if (getBooksByName(searchText.toLowerCase()).size() > 0) {
            addBooksToTable(getBooksByName(searchText.toLowerCase()));
            return;
        }
        if (getBooksByAuthor(searchText.toLowerCase()).size() > 0) {
            addBooksToTable(getBooksByAuthor(searchText.toLowerCase()));
            return;
        }
        if (getBooksByPubDate(searchText.toLowerCase()).size() > 0) {
            addBooksToTable(getBooksByPubDate(searchText.toLowerCase()));
            return;
        }
        if (getBooksBySeriNo(searchText.toLowerCase()).size() > 0) {
            addBooksToTable(getBooksBySeriNo(searchText.toLowerCase()));
            return;
        }
        JOptionPane.showMessageDialog(this, "There is no search resultl!");
    }//GEN-LAST:event_jButtonSearchActionPerformed

    private void jButtonSignoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSignoutActionPerformed
        // TODO add your handling code here:
        new Main().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButtonSignoutActionPerformed

    private Book generateNewBook() {
        String bookTitle = faker.book().title();
        String author = faker.name().fullName();
        // publish date
        String pattern = "MM/dd/yyyy";
        DateFormat df = new SimpleDateFormat(pattern);
        String pubDate = df.format((faker.date().birthday()));

        int seriNo = 10000000 + new Random().nextInt(90000000);

        return new Book(bookTitle, author, pubDate, seriNo);
    }

    private void jButtonGenerateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGenerateActionPerformed
        // TODO add your handling code here:
        Book book = generateNewBook();
        Management.books.add(book);
        tavleModel.addRow(new Object[]{book.name, book.author, book.PublishDate, book.seriNo});
    }//GEN-LAST:event_jButtonGenerateActionPerformed

    static void exportToTXTFile() {
        Path currentRelativePath = Paths.get("");
        String s = currentRelativePath.toAbsolutePath().toString();

        String outputPath = s + "/src/main/java/Library/databaseBackup.txt";

//        PrintWriter pw = new PrintWriter(f_output);
        File targetFile = new File(outputPath);

        try {
            PrintWriter writer = new PrintWriter(targetFile);
            for (Book book : Management.books) {
                writer.println(book.toString());
            }
//            writer.println("Sum of the Integer values= " + sum);
//            writer.println("Average of the Integer values= " + average);
            writer.flush();
        } catch (Exception e) {
            System.out.println("File not exist");
        }
//        System.out.println( "This is path: " + s + "/src/main/java/Library/databaseBackup.txt");
    }
    private void jButtonExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExportActionPerformed
        // TODO add your handling code here:
        exportToTXTFile();
    }//GEN-LAST:event_jButtonExportActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Management.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Management.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Management.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Management.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Management().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonExport;
    private javax.swing.JButton jButtonGenerate;
    private javax.swing.JButton jButtonSearch;
    private javax.swing.JButton jButtonSignout;
    private javax.swing.JButton jButtonUpdate;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldSearch;
    // End of variables declaration//GEN-END:variables
}
